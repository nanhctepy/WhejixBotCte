import random
import asyncio
import discord
from colorama import Fore, Style
from time import sleep,strftime
import requests
import datetime
from atexit import register
from time import sleep
import sys
import threading,base64
import os,time,re,json,random
from discord import FFmpegPCMAudio
from discord import Permissions
from discord.ext import commands, tasks
from discord.utils import get
from urllib.parse import quote
import os
import ssl
from urllib.parse import urlencode
from http import cookiejar
from urllib3.exceptions import InsecureRequestWarning
import hashlib
import random
from colorama import Fore, Style, init
from http.client import HTTPSConnection

try:
    import base64
    from requests.exceptions import RequestException
    import requests
    import pystyle
    from concurrent.futures import ThreadPoolExecutor
    from faker import Faker
    from requests import session
    import concurrent.futures
    
except ImportError:
    import os
    os.system("pip install faker")
    os.system("pip install colorama")
    os.system("pip install requests")
    os.system("pip install pystyle")
    os.system("pip install concurrent.futures")
    os.system("pip install base64")
import requests,os,time,re,json,uuid,random,sys
from concurrent.futures import ThreadPoolExecutor
import datetime
import requests,json
import uuid
import requests
from time import sleep
from random import choice, randint, shuffle
from pystyle import Add, Center, Anime, Colors, Colorate, Write, System
from os.path import isfile
from pystyle import Colors, Colorate, Write, Center, Add, Box
from time import sleep,strftime
import socket
from pystyle import *
import json,requests,time
import string
import secrets
import time
from itertools import cycle

from discord import app_commands
CHANNELS = None
VOICE = None
ROLE = None
NAME = None
white_list = None
MSG = None
boucle2 = True
sent_count = 0
MAX_RETRIES = 3
MAX_MESSAGES_BEFORE_CLEAR = 100
from bs4 import BeautifulSoup




TOKEN = "MTIzOTg4MTAxMDgxMzA3NTUxNg.Gfkifo.o0SwQNsCvcddk6c-Fe5S1HiefWG1qruosaFK8o"
PREFIX = "/"

thoigianguitinnhan = 1 

cooldown_data = {}
money_file = "money_data.json"

if os.path.exists(money_file):
    with open(money_file, "r") as file:
        money_data = json.load(file)
else:
    money_data = {}

def save_money_data():
    with open(money_file, "w") as file:
        json.dump(money_data, file)

def add_money(user_id, amount):
    if user_id in money_data:
        money_data[user_id] += amount
    else:
        money_data[user_id] = amount
    save_money_data()

def subtract_money(user_id, amount):
    if user_id in money_data:
        money_data[user_id] -= amount
        if money_data[user_id] < 0:
            money_data[user_id] = 0
    save_money_data()

def get_money(user_id):
    return money_data.get(user_id, 0)
from datetime import datetime, timedelta
def check_cooldown(author_id, job_id):
    if author_id in cooldown_data:
        if job_id in cooldown_data[author_id]:
            if datetime.now() < cooldown_data[author_id][job_id]:
                return True
    return False

def update_cooldown(author_id, job_id):
    if author_id not in cooldown_data:
        cooldown_data[author_id] = {}
    cooldown_data[author_id][job_id] = datetime.now() + timedelta(seconds=60)


jobs = {
    "1": {"name": "L√†m ƒëƒ©", "reward_range": (500000, 700000)},
    "2": {"name": "L√†m √¥sin", "reward_range": (15000, 25000)},
    "3": {"name": "L√†m ƒëi·∫øm", "reward_range": (700000, 900000)},
    "4": {"name": "B√°n m√°u", "reward_range": (300000, 500000)},
    "5": {"name": "L√†m th·ª£ s·ª≠a ch·ªØa", "reward_range": (100000, 200000)},
    "6": {"name": "L√†m ph·ª•c v·ª• qu√°n ƒÉn", "reward_range": (20000, 40000)},
    "7": {"name": "D·∫°y k√®m", "reward_range": (40000, 60000)},
    "8": {"name": "L√†m b·∫£o v·ªá", "reward_range": (50000, 90000)},
    "9": {"name": "L√†m t√†i x·∫ø", "reward_range": (100000, 150000)},
    "10": {"name": ":L√†m nh√† b√°o", "reward_range": (200000, 300000)},
}

def get_random_reward(job_id):
    if job_id in jobs:
        min_reward, max_reward = jobs[job_id]['reward_range']
        return random.randint(min_reward, max_reward)
    return 0


def load_nhay_messages():
    nhay_messages = []
    try:
        with open("nhay.txt", "r", encoding="utf-8") as file:
            for line in file:
                nhay_messages.append(line.strip())
    except FileNotFoundError:
        print("Kh√¥ng t√¨m th·∫•y file nhay.txt. H√£y t·∫°o file v√† nh·∫≠p c√°c tin nh·∫Øn v√†o ƒë√≥.", delete_after = 1)
    return nhay_messages
nhay_messages = load_nhay_messages()

def get_user_money(user_id):
    return money_data.get(str(user_id), 0)

def set_user_money(self, user_id, amount):
    self.user_money[user_id] = amount
    print(f"Updated money for {user_id}: {amount}")

intents = discord.Intents.all()
bot = commands.Bot(command_prefix=PREFIX, intents=intents)


spam_task = None  
nhay_tasks = {}
nhaybth_tasks = {}

allow_admin = False

# Danh s√°ch qu·∫£n tr·ªã vi√™n
admin_list = {709056652543918132}  
@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    await bot.process_commands(message)

@bot.tree.command(name="allowadmin", description="B·∫≠t ho·∫∑c t·∫Øt ch·∫ø ƒë·ªô cho ph√©p l·ªánh ch·ªâ d√†nh cho qu·∫£n tr·ªã vi√™n")
async def allow_admin_cmd(interaction: discord.Interaction, enable: bool):
    global allow_admin
    if interaction.user.id not in admin_list:
        return

    allow_admin = enable
    status = "b·∫≠t" if enable else "t·∫Øt"
    await interaction.response.send_message(f"Ch·∫ø ƒë·ªô cho ph√©p l·ªánh admin ƒë√£ {status}.", ephemeral=True)

@bot.tree.command(name="addadmin", description="Th√™m m·ªôt qu·∫£n tr·ªã vi√™n v√†o danh s√°ch")
async def add_admin(interaction: discord.Interaction, user: discord.User):
    global admin_list

    if interaction.user.id not in admin_list:
        return


    admin_list.add(user.id)
    await interaction.response.send_message(f"ƒê√£ th√™m {user.mention} v√†o danh s√°ch qu·∫£n tr·ªã vi√™n.", ephemeral=True)


@bot.tree.command(name="removeadmin", description="X√≥a m·ªôt qu·∫£n tr·ªã vi√™n kh·ªèi danh s√°ch")
async def remove_admin(interaction: discord.Interaction, user: discord.User):
    global admin_list

    if interaction.user.id not in admin_list:
        return


    admin_list.discard(user.id)
    await interaction.response.send_message(f"ƒê√£ x√≥a {user.mention} kh·ªèi danh s√°ch qu·∫£n tr·ªã vi√™n.", ephemeral=True)


@bot.tree.command(name="listadmins", description="Xem danh s√°ch c√°c qu·∫£n tr·ªã vi√™n")
async def list_admins(interaction: discord.Interaction):
    global admin_list

    if interaction.user.id not in admin_list:
        return

    if not admin_list:
        await interaction.response.send_message("Danh s√°ch qu·∫£n tr·ªã vi√™n hi·ªán ƒëang tr·ªëng.", ephemeral=True)
        return


    admin_mentions = [f"<@{admin_id}>" for admin_id in admin_list]
    admin_list_str = "\n".join(admin_mentions)
    await interaction.response.send_message(f"Danh s√°ch qu·∫£n tr·ªã vi√™n:\n{admin_list_str}", ephemeral=True)

@bot.tree.command(name="ping", description="Ki·ªÉm tra ƒë·ªô tr·ªÖ Bot.")
async def ping(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:

        return

    try:
        latency = round(bot.latency * 1000) 
        await interaction.response.send_message(f"üéæ | **Ping Pong!** ƒê·ªô tr·ªÖ c·ªßa Bot hi·ªán t·∫°i l√†: `{latency}ms`")
    except Exception as e:
        await asyncio.sleep(5)
        try:
            latency = round(bot.latency * 1000)
            await interaction.response.send_message(f"üéæ | **Ping Pong!** ƒê·ªô tr·ªÖ c·ªßa Bot hi·ªán t·∫°i l√†: `{latency}ms`")
        except Exception as retry_exception:
            await interaction.response.send_message(f":x: | **L·ªói r·ªìi!** {retry_exception}", ephemeral=True)
image_links = [
    "https://cdn.myphamsakura.edu.vn/wp-content/uploads/2024/06/gai-xinh-vu-to-trang-1.jpg",
    "https://gaixinhkhoehang.com/wp-content/uploads/2022/10/20221021-Smileyee-22-808x1212.jpg",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT4fdM_O4uBRDo67ImEwq-vt003s7Spb5Kv7Q&s",
    "https://bloggioitre.net/wp-content/uploads/2022/01/hinh-vu-dep-2.jpg",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRDXnI1MGlw0VRyjyB3VJYDTP3PGmUBqn4tMw&s",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQneHmeurOFyPOJI9LuS6ljOKpSsfyr3CWfcQ&s",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTUc8uJZzFjouj7C_-XLyxMqvNIYcblgijpJQ&s",
    "https://teletiengviet.com/wp-content/uploads/2022/12/ANH-KHOE-NGUC-1.jpeg",
    "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhMWpcCrVNKDGym14pGn1yMu-jH1UTR7zaFqHzKrIGJJRMGnxiGnjcJppGqWrtv8ke21ashsZaUq2sDiMmsTVhpnKzuuj0-f7mTMMIYVMjT-ggFd2HFh9p3nMfHkaI5DKOfMfOONtQ2os4KaEQ3Uy4avJ132XSRcvhmSP5RjAXl4kF02Ajqv8DaBEYm1g/s1600/anh-sex-1221-10194108-008.jpg",
    "https://condomviet.com/wp-content/uploads/2021/04/hinh-anh-vu-dep.jpeg",
    "https://topgaixinh.com/wp-content/uploads/2022/11/20221118-Nguyen-Thi-Thu-20-808x1290.jpg",
    "https://cdn.career.edu.vn/wp-content/uploads/2024/04/anh-girl-khoe-vu-1.jpg",
    "https://kenh14cdn.com/203336854389633024/2021/11/28/photo-4-1638069722997887427202.jpg",
    "https://thegioimypham123.com/images/companies/1/vhhh/fe75d657ba6bde9ff77dc481c0ce1a52.jpg?1687574613212",
    "https://condomviet.com/wp-content/uploads/2021/04/hinh-anh-vu-dep-4.jpg",
    "https://gaixinhkhoehang.com/wp-content/uploads/2023/02/anh-gai-nguc-to-19.jpg",
    "https://kenh14cdn.com/2019/8/27/6625837813537884714440914756382156664602624o-1566876775503776987849.jpg",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ5GWmPZw7stVCGTSjHC3168Sy0r_tsxdDDKA&s",
    "https://bloggioitre.net/wp-content/uploads/2021/11/hinh-anh-goi-cam-che-mat-28.jpg",
    "https://shop.muoitamcong.vn/wp-content/uploads/2023/10/Gai-xinh-khoe-vu-dep-nguc-to.jpg.webp",
    "https://anhgaimup.com/wp-content/uploads/2023/12/hinh-anh-gai-vu-to-tren-website-anh-gai-mup-134.webp",
    "https://cdn.eva.vn/upload/3-2021/images/2021-07-03/new-project-235-1625324052-571-width800height700.jpg",
    "https://anhgaidep.net/wp-content/uploads/2024/01/anh-gai-xinh-khoe-nguc-7.webp",
    "https://teletiengviet.com/wp-content/uploads/2022/11/anh-gai-xinh-khoe-vu-dep-to-ho-ti-61.jpg",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSXZBQudOC25qlouMANOoCxZEkq75BlhP6MNA&s",
    "https://japans.vn/wp-content/uploads/2023/06/vu-dep-24-22.jpg",
    "https://thegioimypham123.com/images/companies/1/cuong/vudep/anh-gai-xinh-khoe-vu-3.jpg?1687425499329",
    "https://i.vietgiaitri.com/2013/12/6/bo-anh-girl-xinh-chau-a-khoe-than-hinh-dep-nguc-trang-muot-9c16eb.jpg",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSM0irVCVWXb0cCDEo-gfo15_87KVuDL-8Kvw&s",
    "https://bloggioitre.net/wp-content/uploads/2021/11/hinh-anh-goi-cam-che-mat-11.jpg",
    "https://thegioimypham123.com/images/companies/1/cuong/vudep/anh-gai-xinh-khoe-vu-7.jpg?1687425529203",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRrEnUCbaTnDA_iZa1Z8exJHxtfBsGKt8Ikcw&s",
    "https://gentlenobra.net/wp-content/uploads/2023/02/anh-gai-xinh-khoe-vu-30.jpg",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT4k_sJ3aZ8RL7W7HztsW7ZJe7z_7wVOKXJxQ&s",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQRdlJjNyuGbEly05jiglQCT6bsZMTL6vVWUw&s",
    "https://girlxinhblog.com/wp-content/uploads/2023/02/hinh-anh-gai-xinh-ho-vu-to-num-hong-loi-ti-10.jpg",
    "https://anhgaimup.com/wp-content/uploads/2023/12/anh-gai-vu-to-tren-website-anh-gai-mup.webp",
    "https://shop.muoitamcong.vn/wp-content/uploads/2023/10/Vu-dep-Viet-Nam-2.jpg.webp",
    "https://pbs.twimg.com/media/Faserf2UIAIk1YF?format=jpg&name=large",
    "https://gaixinh.photo/wp-content/uploads/2022/03/gai-xinh-khoe-vu-02.jpg",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR7bZofNrtYyaqOdJMFo0Ab5BMSK0_xcfB89A&s",
    "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTQ5J1rPm-PRtzOSu1S9hfGjcknlZI3FMQn5A&s",
    "https://anhgaisexy.net/wp-content/uploads/2023/03/anh-lo-vu-021.jpg",
]
@bot.tree.command(name="vu", description="Random V√∫.")
async def vu(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    try:
        image_url = random.choice(image_links)
        await interaction.response.send_message(image_url)
    except Exception as e:
        await interaction.response.send_message(f'L·ªói khi g·ª≠i li√™n k·∫øt h√¨nh ·∫£nh: {e}')

@bot.tree.command(name="n", description="Nh√¢y tag user.")
async def n(interaction: discord.Interaction, user: discord.Member):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    task_key = (interaction.channel.id, user.id)
    if task_key in nhay_tasks and not nhay_tasks[task_key].done():
        await interaction.response.send_message("ƒêang g·ª≠i tin nh·∫Øn!", ephemeral=True)
        return

    async def send_nhayten(interaction: discord.Interaction, user: discord.Member):
        index = 0
        while True:
            try:
                formatted_message = f"{nhay_messages[index % len(nhay_messages)]}"
                await interaction.channel.send(f"{formatted_message} <@{user.id}>")
                index += 1
            except Exception as e:
                await asyncio.sleep(5)  
                continue
            await asyncio.sleep(2)
    nhay_tasks[task_key] = bot.loop.create_task(send_nhayten(interaction, user))

@bot.tree.command(name="checkmoney", description="Ki·ªÉm tra s·ªë d∆∞")
@app_commands.describe(user="Ng∆∞·ªùi d√πng m√† b·∫°n mu·ªën ki·ªÉm tra s·ªë d∆∞")
async def checkmoney(interaction: discord.Interaction, user: discord.User = None):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    if user is None:
        user = interaction.user

    user_money = get_money(str(user.id))


    embed = discord.Embed(
        title=f"üíé Th√¥ng Tin T√†i Kho·∫£n c·ªßa {user.display_name} üíé",
        description=f"üåü **T√™n:** {user.display_name}\n"
                    f"üí∞ **S·ªë ti·ªÅn hi·ªán c√≥:** {user_money:,} VND",
        color=discord.Color.blue() 
    )
    

    embed.add_field(name="üí° L∆∞u √Ω", value="ƒê·∫£m b·∫£o ki·ªÉm tra s·ªë d∆∞ c·ªßa b·∫°n th∆∞·ªùng xuy√™n v√† qu·∫£n l√Ω t√†i ch√≠nh m·ªôt c√°ch h·ª£p l√Ω.", inline=False)
    embed.add_field(name="‚ú® Ch√∫c b·∫°n ch∆°i vui v·∫ª v√† may m·∫Øn!", value="\u200b", inline=False)


    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="setmoney", description="Bi·∫øn ƒë·ªông s·ªë d∆∞")
@app_commands.describe(user="Ng∆∞·ªùi nh·∫≠n ti·ªÅn", amount="S·ªë ti·ªÅn th√™m v√†o")
async def setmoney(interaction: discord.Interaction, user: discord.User, amount: int):
    global admin_list

    if interaction.user.id not in admin_list:
        return

    add_money(str(user.id), amount)


    embed = discord.Embed(
        title="‚ú® C·∫≠p Nh·∫≠t T√†i Kho·∫£n Th√†nh C√¥ng! ‚ú®",
        description=f"üë§ **Ng∆∞·ªùi Nh·∫≠n:** {user.mention} ({user.display_name})\n"
                    f"üí∏ **S·ªë Ti·ªÅn ƒê√£ Th√™m:** {amount:,} VND",
        color=discord.Color.green()  
    )

    embed.add_field(name="üîç Chi Ti·∫øt", value=f"   - **T√†i kho·∫£n:** {user.id}\n   - **S·ªë d∆∞ hi·ªán t·∫°i:** {get_money(str(user.id)):,} VND", inline=False)
    embed.add_field(name="üéâ C·∫£m ∆°n b·∫°n ƒë√£ c·∫≠p nh·∫≠t s·ªë d∆∞!", value="üëâ **ƒê·ª´ng qu√™n ki·ªÉm tra l·∫°i s·ªë d∆∞ c·ªßa ng∆∞·ªùi d√πng ƒë·ªÉ x√°c nh·∫≠n.**", inline=False)

    await interaction.response.send_message(embed=embed)
@bot.tree.command(name='help', description='H∆∞·ªõng d·∫´n Play Game.')
async def help(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    help_message = (
        "üéâ **C√°c Ch·ª©c NƒÉng C√≥ S·∫µn** üéâ\n\n"
        "üìú **1. Ki·ªÉm Tra Ti·ªÅn**\n"
        "   - **C√∫ ph√°p:** `checkmoney`\n"
        "   - **M√¥ t·∫£:** Ki·ªÉm tra s·ªë ti·ªÅn hi·ªán t·∫°i c·ªßa b·∫°n.\n\n"
        
        "üí∞ **2. ƒê·∫∑t Ti·ªÅn Cho Ng∆∞·ªùi D√πng**\n"
        "   - **C√∫ ph√°p:** `setmoney @ng∆∞·ªùi_d√πng <s·ªë ti·ªÅn>`\n"
        "   - **M√¥ t·∫£:** ƒê·∫∑t s·ªë ti·ªÅn cho ng∆∞·ªùi d√πng c·ª• th·ªÉ.\n\n"
        
        "üìã **3. Xem Danh S√°ch C√¥ng Vi·ªác**\n"
        "   - **C√∫ ph√°p:** `lamviec`\n"
        "   - **M√¥ t·∫£:** Hi·ªÉn th·ªã danh s√°ch c√¥ng vi·ªác hi·ªán c√≥.\n\n"
        
        "üî® **4. Ch·ªçn C√¥ng Vi·ªác**\n"
        "   - **C√∫ ph√°p:** `lamviec <s·ªë>`\n"
        "   - **M√¥ t·∫£:** Ch·ªçn c√¥ng vi·ªác v√† nh·∫≠n ti·ªÅn t∆∞∆°ng ·ª©ng.\n\n"
        
        "üé≤ **5. Ch∆°i T√†i X·ªâu**\n"
        "   - **C√∫ ph√°p:** `taixiu <T√†i/X·ªâu> <s·ªë ti·ªÅn c∆∞·ª£c>`\n"
        "   - **M√¥ t·∫£:** ƒê·∫∑t c∆∞·ª£c v√†o t√†i ho·∫∑c x·ªâu.\n\n"
        
        "üí° **Ghi ch√∫:**\n"
        "   - S·ªë ti·ªÅn c∆∞·ª£c t·ªëi thi·ªÉu l√† **1000 VND**.\n"
        "   - ƒê·ªÉ bi·∫øt th√™m th√¥ng tin, vui l√≤ng li√™n h·ªá v·ªõi qu·∫£n tr·ªã vi√™n.\n\n"
        
        "üéâ **Ch√∫c b·∫°n ch∆°i vui v·∫ª!** üéâ"
    )

    gif_url = "https://i.pinimg.com/originals/5c/82/fb/5c82fb5223f823b89cc6bd78f0e47218.gif" 


    embed = discord.Embed(
        description=help_message,
        color=discord.Color.purple()
    )
    embed.set_image(url=gif_url)

    await interaction.response.send_message(embed=embed)
from discord import Embed
job_list = [
    ("L√†m ƒêƒ©", "500.000 - 700.000 VND", "üíµ"),
    ("L√†m √îsin", "15.000 - 25.000 VND", "üßπ"),
    ("L√†m ƒêi·∫øm", "700.000 - 900.000 VND", "üí∏"),
    ("B√°n M√°u", "300.000 - 500.000 VND", "ü©∏"),
    ("L√†m Th·ª£ S·ª≠a Ch·ªØa", "100.000 - 200.000 VND", "üîß"),
    ("L√†m Ph·ª•c V·ª• Qu√°n ƒÇn", "20.000 - 40.000 VND", "üçΩÔ∏è"),
    ("D·∫°y K√®m", "40.000 - 60.000 VND", "üìö"),
    ("L√†m B·∫£o V·ªá", "50.000 - 90.000 VND", "üõ°Ô∏è"),
    ("L√†m T√†i X·∫ø", "100.000 - 150.000 VND", "üöó"),
    ("L√†m Nh√† B√°o", "200.000 - 300.000 VND", "üì∞")
]

@bot.tree.command(name="lamviec", description="Ch·ªçn c√¥ng vi·ªác v√† nh·∫≠n ti·ªÅn")
@app_commands.describe(job_id="ID c√¥ng vi·ªác b·∫°n mu·ªën ch·ªçn")
async def lamviec(interaction: discord.Interaction, job_id: str = None):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    if job_id is None:

        embed = discord.Embed(
            title="üéØ Danh S√°ch C√¥ng Vi·ªác üéØ",
            color=0x1E90FF  # M√†u xanh d∆∞∆°ng nh·∫π
        )
        for i, (name, reward, icon) in enumerate(job_list, 1):
            embed.add_field(name=f"{i}Ô∏è‚É£ {icon} {name}", value=f"üíµ Ph·∫°m vi: {reward}", inline=False)
        embed.set_footer(text="üìå Ch·ªçn m·ªôt c√¥ng vi·ªác b·∫±ng c√°ch s·ª≠ d·ª•ng ID c·ªßa n√≥ (v√≠ d·ª•: `/lamviec 1`).")
        await interaction.response.send_message(embed=embed)
        return

    if not job_id.isdigit() or int(job_id) < 1 or int(job_id) > len(job_list):

        embed = discord.Embed(
            title="‚ùå C√¥ng Vi·ªác Kh√¥ng H·ª£p L·ªá",
            description="Vui l√≤ng ch·ªçn m·ªôt c√¥ng vi·ªác h·ª£p l·ªá:",
            color=0xFF6347  # M√†u ƒë·ªè t∆∞∆°i
        )
        job_options = "\n".join([f"{i}: {name}" for i, (name, _, _) in enumerate(job_list, 1)])
        embed.add_field(name="Danh s√°ch c√¥ng vi·ªác:", value=job_options, inline=False)
        await interaction.response.send_message(embed=embed)
        return

    if check_cooldown(str(interaction.user.id), job_id):
        embed = discord.Embed(
            title="‚è≥ Ch·ªù ƒê·ª£i",
            description="B·∫°n ph·∫£i ch·ªù 60 gi√¢y ƒë·ªÉ l√†m c√¥ng vi·ªác n√†y l·∫°i.",
            color=0xFFA07A  # M√†u cam nh·∫°t
        )
        await interaction.response.send_message(embed=embed)
        return


    update_cooldown(str(interaction.user.id), job_id)
    job_name = job_list[int(job_id) - 1][0]
    job_reward = get_random_reward(job_id)
    add_money(str(interaction.user.id), job_reward)
    embed = discord.Embed(
        title="üéâ Th√†nh C√¥ng!",
        description=f"B·∫°n ƒë√£ ch·ªçn c√¥ng vi·ªác **{job_name}** v√† nh·∫≠n ƒë∆∞·ª£c **{job_reward} VND**.",
        color=0x32CD32  # M√†u xanh l√° c√¢y t∆∞∆°i s√°ng
    )
    await interaction.response.send_message(embed=embed)
@bot.tree.command(name='chanle', description='Ch∆°i x√∫c x·∫Øc v·ªõi c∆∞·ª£c v√† ƒëo√°n l·∫ª ho·∫∑c ch·∫µn!')
@app_commands.describe(bet_type="Lo·∫°i c∆∞·ª£c ('L·∫ª' ho·∫∑c 'Ch·∫µn')", bet_amount="S·ªë ti·ªÅn c∆∞·ª£c")
async def chanle(interaction: discord.Interaction, bet_type: str, bet_amount: int):
    user_id = str(interaction.user.id)
    current_money = get_money(user_id)


    if bet_amount <= 0:
        await interaction.response.send_message("üî¥ **S·ªë ti·ªÅn c∆∞·ª£c ph·∫£i l·ªõn h∆°n 0.**", ephemeral=True)
        return

    if bet_amount > current_money:
        await interaction.response.send_message("üî¥ **B·∫°n kh√¥ng c√≥ ƒë·ªß ti·ªÅn ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c.**", ephemeral=True)
        return

    dice_numbers = [1, 2, 3, 4, 5, 6]
    chosen_number = random.choice(dice_numbers)
    is_odd = chosen_number % 2 != 0
    result = "L·∫ª" if is_odd else "Ch·∫µn"

    image_path = f'chanle/{chosen_number}.jpeg'
    
    if not os.path.isfile(image_path):
        await interaction.response.send_message("üî¥ **Kh√¥ng t√¨m th·∫•y h√¨nh ·∫£nh cho s·ªë x√∫c x·∫Øc.**", ephemeral=True)
        return

    win = (bet_type == result)
    if win:
        add_money(user_id, bet_amount)
        result_message = f"üéâ **Ch√∫c m·ª´ng! B·∫°n ƒë√£ th·∫Øng c∆∞·ª£c {bet_amount} VND.**"
    else:
        subtract_money(user_id, bet_amount)
        result_message = f"‚ùå **R·∫•t ti·∫øc! B·∫°n ƒë√£ thua c∆∞·ª£c {bet_amount} VND.**"


    embed = discord.Embed(
        title="K·∫øt qu·∫£ X√∫c X·∫Øc",
        description=f"S·ªë x√∫c x·∫Øc: **{chosen_number}**\nK·∫øt qu·∫£: **{result}**\n{result_message}",
        color=discord.Color.green() if win else discord.Color.red()
    )
    
    await interaction.response.send_message(embed=embed)
    await interaction.followup.send(file=discord.File(image_path))


@bot.tree.command(name="taixiu", description="Ch∆°i t√†i x·ªâu v·ªõi c∆∞·ª£c.")
@app_commands.describe(bet_type="Lo·∫°i c∆∞·ª£c ('T√†i' ho·∫∑c 'X·ªâu')", bet_amount="S·ªë ti·ªÅn c∆∞·ª£c")
async def taixiu(interaction: discord.Interaction, bet_type: str, bet_amount: int):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    user_id = str(interaction.user.id)
    current_money = get_money(user_id)

    if current_money < 1000:
        await interaction.response.send_message("üî¥ **B·∫°n c·∫ßn √≠t nh·∫•t 1000 VND ƒë·ªÉ ch∆°i t√†i x·ªâu.**", ephemeral=True)
        return

    if bet_amount < 1000:
        await interaction.response.send_message("üî¥ **S·ªë ti·ªÅn c∆∞·ª£c t·ªëi thi·ªÉu l√† 1000 VND.**", ephemeral=True)
        return

    if bet_amount > current_money:
        await interaction.response.send_message("üî¥ **B·∫°n kh√¥ng c√≥ ƒë·ªß ti·ªÅn ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c.**", ephemeral=True)
        return

    try:
        total = random.randint(3, 18)
        result = "T√†i" if total > 10 else "X·ªâu"

        image_directory = "taixiu"
        image_filename = f"{total}.jpg"
        image_path = os.path.join(image_directory, image_filename)

        if not os.path.exists(image_path):
            await interaction.response.send_message(f"üî¥ **Kh√¥ng t√¨m th·∫•y h√¨nh ·∫£nh cho t·ªïng ƒëi·ªÉm {total}.**", ephemeral=True)
            return
        embed = discord.Embed(
            title="K·∫øt qu·∫£ T√†i X·ªâu",
            description=f"T·ªïng ƒëi·ªÉm: **{total}**\nK·∫øt qu·∫£: **{result}**",
            color=discord.Color.green() if bet_type == result else discord.Color.red()
        )
        
        if bet_type == result:
            add_money(user_id, bet_amount)
            embed.add_field(name="Ch√∫c m·ª´ng!", value=f"B·∫°n ƒë√£ th·∫Øng c∆∞·ª£c **{bet_amount} VND**!", inline=False)
        else:
            subtract_money(user_id, bet_amount)
            embed.add_field(name="Th·∫•t b·∫°i!", value=f"B·∫°n ƒë√£ thua c∆∞·ª£c **{bet_amount} VND**.", inline=False)

        await interaction.response.send_message(embed=embed)
        await interaction.followup.send(file=discord.File(image_path))
    except Exception as e:
        await interaction.response.send_message(f"üî¥ **L·ªói kh√¥ng mong mu·ªën: {e}**")


@bot.tree.command(name="c", description="Ch·ª≠i nhau.")
async def c(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    if interaction.channel.id in nhaybth_tasks and not nhaybth_tasks[interaction.channel.id].done():
        await interaction.response.send_message("üîÑ **L·ªánh ƒëang ch·∫°y trong k√™nh n√†y.**", ephemeral=True)
        return

    async def send_nhay(ctx):
        index = 0
        while True:
            try:
                formatted_message = f"{nhay_messages[index % len(nhay_messages)]}"
                await ctx.send(f"{formatted_message}")
                index += 1
            except Exception as e:
                await asyncio.sleep(5)
                continue
            await asyncio.sleep(2)

    nhaybth_tasks[interaction.channel.id] = bot.loop.create_task(send_nhay(interaction.channel))
    await interaction.response.send_message("‚úÖ **ƒê√£ b·∫Øt ƒë·∫ßu g·ª≠i th√¥ng ƒëi·ªáp.**", ephemeral=True)

@bot.command()
async def stc(ctx):
    if ctx.channel.id in nhaybth_tasks and nhaybth_tasks[ctx.channel.id] and not nhaybth_tasks[ctx.channel.id].done():
        nhaybth_tasks[ctx.channel.id].cancel()
        nhaybth_tasks[ctx.channel.id] = None
        try:
            await ctx.send("ƒê√£ d·ª´ng l·ªánh nh√¢y.", delete_after=1)
        except discord.HTTPException as e:
            if e.status == 429:
                await asyncio.sleep(e.retry_after)
                await ctx.send("ƒê√£ d·ª´ng l·ªánh nh√¢y.", delete_after=1)
    else:
        try:
            await ctx.send("L·ªánh nh√¢y kh√¥ng ho·∫°t ƒë·ªông.", delete_after=1)
        except discord.HTTPException as e:
            if e.status == 429:
                await asyncio.sleep(e.retry_after)
                await ctx.send("L·ªánh nh√¢y kh√¥ng ho·∫°t ƒë·ªông.", delete_after=1)

    if ctx.channel.id in nhaybth_tasks:
        del nhaybth_tasks[ctx.channel.id]

@bot.command()
async def stn(ctx, user: discord.Member):
    task_key = (ctx.channel.id, user.id)
    if task_key not in nhay_tasks or nhay_tasks[task_key].done():
        await ctx.send("Kh√¥ng c√≥ tin nh·∫Øn n√†o ƒëang g·ª≠i cho ng∆∞·ªùi d√πng n√†y trong k√™nh n√†y.", delete_after=1)
        return

    nhay_tasks[task_key].cancel()
    del nhay_tasks[task_key]  
    await ctx.send("ƒê√£ d·ª´ng g·ª≠i tin nh·∫Øn!", delete_after=1)

nhayanh_tasks = {}

@bot.tree.command(name="fsm", description="Face shaming m·∫•y ƒë·ª©a ngu")
async def fsm(
    interaction: discord.Interaction,
    user: discord.Member,
    image_urls: str
):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    task_key = (interaction.channel.id, user.id)
    if task_key in nhayanh_tasks and not nhayanh_tasks[task_key].done():
        await interaction.response.send_message("A task is already running for this user.", ephemeral=True)
        return


    image_urls = image_urls.split()

    async def send_nhayanh():
        index = 0
        while True:
            for nhay_message in nhay_messages:
                try:
                    formatted_image_url = f"[{nhay_message}]({image_urls[index % len(image_urls)]})"
                    await interaction.channel.send(f"# > <@{user.id}> {formatted_image_url}")
                    index += 1
                except Exception as e:
                    await asyncio.sleep(5)
                    continue
                await asyncio.sleep(2)

    nhayanh_tasks[task_key] = bot.loop.create_task(send_nhayanh())
    await interaction.response.send_message("Started sending messages!", ephemeral=True)
@bot.command()
async def stfsm(ctx, user: discord.Member):
    task_key = (ctx.channel.id, user.id)
    if task_key in nhayanh_tasks and nhayanh_tasks[task_key] and not nhayanh_tasks[task_key].done():
        nhayanh_tasks[task_key].cancel()
        nhayanh_tasks[task_key] = None
        try:
            await ctx.send("ƒê√£ d·ª´ng l·ªánh nhayanh.", delete_after=1)
        except discord.HTTPException as e:
            if e.status == 429:
                await asyncio.sleep(e.retry_after)
                await ctx.send("ƒê√£ d·ª´ng l·ªánh nhayanh.", delete_after=1)
    else:
        try:
            await ctx.send("L·ªánh nhayanh kh√¥ng ho·∫°t ƒë·ªông.", delete_after=1)
        except discord.HTTPException as e:
            if e.status == 429:
                await asyncio.sleep(e.retry_after)
                await ctx.send("L·ªánh nhayanh kh√¥ng ho·∫°t ƒë·ªông.", delete_after=1)

    if task_key in nhayanh_tasks:
        del nhayanh_tasks[task_key]


gadit_tasks = {}
@bot.tree.command(name="chich", description="G·∫° ƒë·ªãt")
async def chich(
    interaction: discord.Interaction,
    member: discord.Member
):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    task_key = (interaction.channel.id, member.id)
    if task_key in gadit_tasks and not gadit_tasks[task_key].done():
        await interaction.response.send_message("A task is already running for this user.", ephemeral=True)
        return

    async def gadit_loop():
        t√°n_g√°i_messages = [
            f"{member.mention} ∆°i, anh mu·ªën some b√© v√™ l·ªù üòâ",
            f"{member.mention} l√†m anh th√®m qu√°.",
            f"Anh ch·ªù c·∫£ ng√†y ch·ªâ mu·ªën l√†m chuy·ªán ·∫•y v·ªõi {member.mention}.",
            f"M√πi mu {member.mention} th·∫≠t h·∫•p d·∫´n.",
            f"{member.mention} th·∫≠t kh√©o l√†m anh h∆∞ng ph·∫•n",
            f"Anh th√≠ch nh√¨n {member.mention} c·ªüi √°o",
            f"{member.mention} r·∫•t th√≠ch c·ªüi qu·∫ßn √°o tr∆∞·ªõc m·∫∑t anh ƒë√∫ng kh.",
            f"{member.mention} th√≠ch n·∫±m tr√™n hay n·∫±m d∆∞·ªõi.",
            f"a mu·ªën la h√°n ƒë·∫©y xe b√≤ v·ªõi {member.mention} ",
            f"{member.mention} th√≠ch t∆∞ th·∫ø n√†o nh·∫•t d·∫°!!!",
            f"anh mu·ªën b√© h·ªôt lu {member.mention}",
            f"anh ƒÉn {member.mention} nh√©",
            f"{member.mention} ƒë·∫πp g√°i qu√° cho a some t√≠",
            f"ƒëi nh√† ngh·ªâ kh√¥ng {member.mention} eyyy",
            f"Anh bao ph√≤ng {member.mention} nhaaa 500k ch·ªãu hongg!!!",
            f"Tr√¥ng {member.mention} th·∫≠t quy·∫øn r≈©",
            f"b√≠m {member.mention} s∆∞·ªõng qu√° anh kh√¥ng ch·ªãu ƒë∆∞·ª£c",
            f"{member.mention} mu·ªën m·∫°nh b·∫°o hay l√† nh·∫π nh√†ng",
            f"a th√®m s·ªù mu {member.mention} v√£i l",
            f"{member.mention} ng·ªìi tr√™n ƒë√πi anh ƒëi",
            f"anh nh·∫•p nh√¥ toco {member.mention} nh√©-))",
            f"th·ª© a c·∫ßn l√† n·ª• c∆∞·ªùi d·ªçc c·ªßa {member.mention}",
            f"m·∫∑c v√°y v√†o ƒëi l√°t a ch·ªü {member.mention} ƒëi nh√† ngh·ªâ",
            f"anh th√®m ƒë·ªãt {member.mention} vl",
            f"tr√¥ng {member.mention} ngon vl l·ªôt qu·∫ßn ra ƒëi b√©",
            f"ƒëi nh√† ngh·ªâ kh {member.mention}",
            f"anh th√®m dit c√°i mu {member.mention} vl",
            f"m√¨nh l√¥i nhau l√™n gi∆∞·ªùng ƒëi {member.mention}",
            f"m√¨nh xem phim sex c√πng nhau nh√© {member.mention}",
            f"mu·ªën √¥m {member.mention} v√†o l√≤ng v√† h√¥n v√†o n·ª• c∆∞·ªùi d·ªçc ngay l·∫≠p t·ª©c!!",
            f"anh s·∫Ω khi·∫øn {member.mention} ph√°t ƒëi√™nn",
            f"sao ng·ª±c {member.mention} to v·∫≠y",
            f"{member.mention} v√∫ b∆°m silicon √† ",
            f"ch·ªèng m√¥ng l√™n ƒëi {member.mention}",
            f"c·ªùi qu·∫ßn ra ƒëi {member.mention}",
            f"a mu·ªën doggy {member.mention} vll",
            f"{member.mention} l√†m a h∆∞ng ph√°n h∆°n ƒëi",
            f"ph√™ vl {member.mention} ∆°ii",
            f"a th√®m s·ªù mu {member.mention}",
        ]
        
        for message in t√°n_g√°i_messages:
            await interaction.channel.send(message)
            await asyncio.sleep(2)

    gadit_tasks[task_key] = bot.loop.create_task(gadit_loop())
    await interaction.response.send_message("Started sending messages!", ephemeral=True)




@bot.command()
async def stchich(ctx, member: discord.Member):

    task_key = (ctx.channel.id, member.id)
    if task_key in gadit_tasks and not gadit_tasks[task_key].done():
        gadit_tasks[task_key].cancel()
        del gadit_tasks[task_key]
        await ctx.send(f"ƒê√£ d·ª´ng l·ªánh gadit cho {member.mention}.", delete_after = 1)
    else:
        await ctx.send(f"Kh√¥ng c√≥ l·ªánh gadit n√†o ƒëang ch·∫°y cho {member.mention}.", delete_after = 1)

from discord.ui import Select, View
class ChannelSelect(Select):
    def __init__(self, channels):
        options = [
            discord.SelectOption(label=channel.name, value=str(channel.id))
            for channel in channels
        ]
        super().__init__(placeholder="Ch·ªçn m·ªôt k√™nh voice...", min_values=1, max_values=1, options=options)
    
    async def callback(self, interaction: discord.Interaction):
        channel_id = int(self.values[0])
        channel = interaction.guild.get_channel(channel_id)
        
        if isinstance(channel, discord.VoiceChannel):
            voice_client = interaction.guild.voice_client
            if voice_client is not None:
                await voice_client.move_to(channel)
            else:
                await channel.connect()
            await interaction.response.send_message(f"ƒê√£ k·∫øt n·ªëi t·ªõi k√™nh voice {channel.name}.", ephemeral=True)
        else:
            await interaction.response.send_message("ID kh√¥ng ph·∫£i l√† k√™nh voice. Vui l√≤ng ch·ªçn k√™nh voice h·ª£p l·ªá.", ephemeral=True)

@bot.tree.command(name="vc", description="Ch·ªçn m·ªôt k√™nh voice ƒë·ªÉ k·∫øt n·ªëi")
async def vc(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    voice_channels = [channel for channel in interaction.guild.channels if isinstance(channel, discord.VoiceChannel)]
    
    if not voice_channels:
        await interaction.response.send_message("Kh√¥ng c√≥ k√™nh voice n√†o trong m√°y ch·ªß.", ephemeral=True)
        return

    select = ChannelSelect(voice_channels)
    view = View()
    view.add_item(select)
    
    await interaction.response.send_message("Ch·ªçn m·ªôt k√™nh voice t·ª´ danh s√°ch b√™n d∆∞·ªõi:", view=view, ephemeral=True)


kiss_image_url = ['https://i.pinimg.com/originals/de/da/c9/dedac9ceaace3856b6fe85522579fb88.gif',
                  'https://genk.mediacdn.vn/2018/8/10/574fcc5512062-15338767229791206235517.gif',
                  'https://genk.mediacdn.vn/2018/8/10/574fcc092e9f0-15338766633901877145999.gif',
                  'https://genk.mediacdn.vn/2018/8/10/574fcc797b21e-1533876813029926506824.gif',
                  "https://genk.mediacdn.vn/2018/8/10/574fcc92e98c3-1533876840028170363441.gif",
                  "https://media1.giphy.com/media/l0HlwzGiIYBzfAx7q/giphy.gif?cid=6c09b952mkwovcan2r978b4f9orc3ckwfr0juoj1n843iq1q&ep=v1_internal_gif_by_id&rid=giphy.gif&ct=g",
                  "https://steamuserimages-a.akamaihd.net/ugc/882005587667465433/0C4C638277B865B1C228FAA3E06DEA6672431633/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false",
                  "https://kenh14cdn.com/zoom/700_438/2019/1/14/jan-14-2019-20-41-32-15474733155841964222776-crop-15474733839431503452567.gif",
                  "https://i.vietgiaitri.com/2022/5/4/tan-chay-voi-4-canh-hon-ngot-lim-nhat-lang-anime-doi-so-2-chuan-ngon-tinh-xem-conan---ran-hon-nhau-ma-quan-queo-6cf-6430200.gif",
                  "https://img.docnhanh.vn/images/uploads/2020/10/13/honeycam-2020-09-07-14-36-53-159946431430428789450-1602558968030153784454.gif",
                  ]

kiss_index = 0
@bot.tree.command(name="kiss", description="Hun ai ƒë√≥!!!")
async def kiss(
    interaction: discord.Interaction,
    member: discord.Member
):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    global kiss_index

    kiss_message = f'# {member.mention} ∆°i,  ƒë√¥i m√¥i c·ªßa b√© th·∫≠t quy·∫øn r≈©! Anh mu·ªën ch·∫°m nh·∫π l√™n b·ªù m√¥i ƒë√≥ c·ªßa em üíã!'
    kiss_image = kiss_image_url[kiss_index]

    await interaction.response.send_message(kiss_message)
    await interaction.followup.send(kiss_image)
    
    kiss_index = (kiss_index + 1) % len(kiss_image_url)




chat_task = None 

@bot.tree.command(name="chat", description="Spam n·ªôi dung b·∫•t k√¨")
async def chat(
    interaction: discord.Interaction,
    message: str
):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    global chat_task

    if len(message.strip()) == 0:
        await interaction.response.send_message("Cung c·∫•p n·ªôi dung mu·ªën chat", ephemeral=True)
        return

    async def send_chatspam():
        while True:
            await interaction.channel.send(message)
            await asyncio.sleep(3)
    if chat_task is not None and not chat_task.done():
        chat_task.cancel()

    chat_task = bot.loop.create_task(send_chatspam())
    await interaction.response.send_message(f"Started sending messages: {message}", ephemeral=True)




@bot.command()
async def stchat(ctx):
    global chat_task

    if chat_task:
        chat_task.cancel()  
        await ctx.send('ƒê√£ d·ª´ng Chat.', delete_after = 1)
    else:
        await ctx.send('Kh√¥ng c√≥ ho·∫°t ƒë·ªông n√†o di·ªÖn ra!.', delete_after = 1 )

@bot.tree.command(name="girl", description="Random ·∫£nh g√°i")
async def girl(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    messages = [
        "V·ª£ ch·ªìng l·ª•c ƒë·ª•c, t√¨nh d·ª•c l√†m h√≤a.",
        "Ng√†y Iphone m·ªü b√°n‚Ä¶ t√¥i mong em ƒë·ª´ng m·ªü h√°ng üôÅ",
        "Em c√≥ m·ªôt con qu·ª∑ c√°i h·ªë, anh c√≥ th·ªÉ nh·ªët qu√°i v·∫≠t c·ªßa anh v√†o trong n√†y ƒë∆∞·ª£c kh√¥ng..",
        "Gi√≥ ƒë∆∞a c√†nh tr√∫c sau h√®, ƒê√¢y em n·∫±m s·∫µn anh ƒë√® ngay ƒëi",
        "T·ª´ l√¢u em ƒë√£ y√™u anh, H√¥m nay em mu·ªën th·∫£ phanh x·∫øp h√¨nh",
        "B·∫Øc thang l√™n h·ªèi √¥ng tr·ªùi, B√°n d√¢m m·ªôt bu·ªïi ki·∫øm l·ªùi bao nhi√™u",
        "Ba d·∫°y em: N∆∞·ªõc bi·ªÉn l√†m ra mu·ªëi, m√≠a l√†m ra ƒë∆∞·ªùng‚Ä¶ v√† c√°i gi∆∞·ªùng l√†m ra em.",
        "Theo nh∆∞ em ƒë∆∞·ª£c bi·∫øt th√¨ 70% c∆° th·ªÉ em l√† n∆∞·ªõc, v·∫≠y anh c√≥ th·ªÉ cho em nu√¥i v√†i con n√≤ng n·ªçc ƒë∆∞·ª£c hong‚Ä¶",
        "Ng√†y ·∫•y r≈© em ƒëi h·ªçc ƒë√†n, kh√¥ng ng·ªù tr·ªü th√†nh nh·∫°c c·ª• ƒë·ªÉ cho em th·ªïi.",
        "ƒê√¥i khi c√≥ nh·ªØng m·ªëi quan h·ªá ch·ªâ ƒë·ªÉ quan h·ªá‚Ä¶",
        "Quy lu·∫≠t c·ªßa t√¨nh y√™u l√†: ch·ª•t, m√∫t, ƒë√∫t, r√∫t, ph·ª•t, c√∫t",
        "Nh√† em l·∫•y chi·∫øu l√†m gi∆∞·ªùng, Tuy h∆°i m·ª•c n√°t, nh∆∞ng t∆∞·ªùng c√°ch √¢m",
        "S·ªëng n·ªôi t√¢m, th·ªß d√¢m l√† ch√≠nh.",
        "Kim ƒë√¢m v√†o th·ªãt th√¨ ƒëau, Th·ªãt ƒë√¢m v√†o th·ªãt nh·ªõ nhau c·∫£ ƒë·ªùi.",
        "Hoa h·ªìng n√†o ch·∫≥ng c√≥ gai, Y√™u nhau th√¨ ph·∫£i c√≥ thai m·ªõi b·ªÅn",
        "∆Ø·ªõc g√¨ anh ho√° th√†nh d∆∞a, ƒê·ªÉ ƒë√™m em nh·ªõ, em ƒë∆∞a anh v√†o.",
        "Y√™u l√† s·ª± rung ƒë·ªông c·ªßa b·ªën ch√¢n gi∆∞·ªùng v√† l√† s·ª± tr·∫ßn tru·ªìng c·ªßa hai c√° th·ªÉ.",
        "N·∫øu ai ƒë√≥ quay l∆∞ng l·∫°i v·ªõi b·∫°n‚Ä¶, H√£y v·ªó v√†o m√¥ng h·ªç.",
        "Anh m·ªát h·∫£, ki·∫øm nh√† n√†o ngh·ªâ nh√©!",
        "Ch·ª•p h√¨nh em kh√¥ng ƒÉn ·∫£nh, nh∆∞ng b·ªè d·∫•u h·ªèi th√¨ em ƒÉn ƒë∆∞·ª£c.",
        "Kh√¥ng th√≠ch history, t√¥i th√≠ch c·∫≠u hi story."
    ]
    image_dir = "image/gai"
    image_files = [f for f in os.listdir(image_dir) if f.endswith(('.jpg', '.jpeg', '.png'))]

    if not image_files:
        await interaction.response.send_message("No images found in the directory.", ephemeral=True)
        return

    random_image = random.choice(image_files)
    image_path = os.path.join(image_dir, random_image)

    random_message = random.choice(messages)


    await interaction.response.send_message(random_message)
    await interaction.followup.send(file=discord.File(image_path))

video_links = [
    "https://i.imgur.com/v8L0Z7o.mp4",
    "https://i.imgur.com/SVqByRi.mp4",
    "https://i.imgur.com/mLzOqdS.mp4",
    "https://i.imgur.com/OvmKQf0.mp4",
    "https://i.imgur.com/sgrFwbX.mp4",
    "https://i.imgur.com/dRZzs3k.mp4",
    "https://i.imgur.com/XmSH5A4.mp4",
    "https://i.imgur.com/6qIKkvf.mp4",
    "https://i.imgur.com/igcTSj5.mp4",
    "https://i.imgur.com/R4uYMsI.mp4",
    "https://i.imgur.com/Mnb8ZlI.mp4",
    "https://i.imgur.com/6g4Abkd.mp4",
    "https://i.imgur.com/GzD1xIU.mp4",
    "https://i.imgur.com/xn29pLP.mp4",
    "https://i.imgur.com/IybO14I.mp4",
    "https://i.imgur.com/tVjs4Fl.mp4",
    "https://i.imgur.com/np2Q1aj.mp4",
    "https://i.imgur.com/voHNL7N.mp4",
    "https://i.imgur.com/iUyOq33.mp4",
    "https://i.imgur.com/kZJYB6z.mp4",
    "https://i.imgur.com/kZJYB6z.mp4",
    "https://i.imgur.com/RSsJj2x.mp4",
    "https://i.imgur.com/3EzsldO.mp4",
    "https://i.imgur.com/y2aK7rX.mp4",
    "https://i.imgur.com/5VrV3Mt.mp4",
    "https://i.imgur.com/arbi4DK.mp4",
    "https://i.imgur.com/YKunVev.mp4",
    "https://i.imgur.com/kMNuv22.mp4",
    "https://i.imgur.com/zO36tlx.mp4",
    "https://i.imgur.com/zO36tlx.mp4",
    "https://i.imgur.com/DzVF3Xd.mp4",
    "https://i.imgur.com/S3Srowd.mp4",
    "https://i.imgur.com/iGYbVki.mp4",
    "https://i.imgur.com/yG97dVV.mp4",
    "https://i.imgur.com/PdaQfZc.mp4",
    "https://i.imgur.com/AggzTzb.mp4",
    "https://i.imgur.com/QT3Wccr.mp4",
    "https://i.imgur.com/jlmECIM.mp4",
    "https://i.imgur.com/4FxQawG.mp4",
    "https://i.imgur.com/PmiZtKo.mp4",
    "https://i.imgur.com/94lNxgu.mp4",
    "https://i.imgur.com/7uWOf1a.mp4",
    "https://i.imgur.com/sGuHy1x.mp4",
    "https://i.imgur.com/rTosLi7.mp4",
    "https://i.imgur.com/kMNuv22.mp4",
    "https://i.imgur.com/kMNuv22.mp4",
    "https://i.imgur.com/ldX0qPY.mp4",
    "https://i.imgur.com/R1v7i9p.mp4",


]
@bot.tree.command(name="anime", description="Random Video Anime")
async def anime(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    try:
        video_url = random.choice(video_links)
        await interaction.response.send_message(video_url)
    except Exception as e:
        await interaction.response.send_message(f'L·ªói khi g·ª≠i li√™n k·∫øt video: {e}', ephemeral=True)
@bot.tree.command(name="id", description="Get ID User")
async def id(
    interaction: discord.Interaction,
    member: discord.Member
):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    member_id = member.id
    response_message = f"ùôÇùôÄùôèùôÑùòø ùôêùôéùôÄùôç üç™ : {member.display_name} ----> {member_id}"
    

    await interaction.response.send_message(response_message)

@bot.tree.command(name="kick", description="Kick member")
async def kick(interaction: discord.Interaction, user: discord.User, reason: str = "Kh√¥ng c√≥ l√Ω do"):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return
    if not interaction.user.guild_permissions.kick_members:
        await interaction.response.send_message("B·∫°n kh√¥ng c√≥ quy·ªÅn ƒë·ªÉ kick ng∆∞·ªùi d√πng.", ephemeral=True)
        return

    if user == bot.user:
        await interaction.response.send_message("Bot kh√¥ng th·ªÉ t·ª± kick ch√≠nh m√¨nh.", ephemeral=True)
        return

    try:

        await interaction.guild.kick(user, reason=reason)
        await interaction.response.send_message(f"ƒê√£ kick {user.mention} kh·ªèi server v·ªõi l√Ω do: {reason}")

    except discord.Forbidden:
        await interaction.response.send_message("Bot kh√¥ng c√≥ quy·ªÅn ƒë·ªÉ kick ng∆∞·ªùi d√πng.", ephemeral=True)
    except discord.HTTPException as e:
        await interaction.response.send_message(f"ƒê√£ x·∫£y ra l·ªói khi c·ªë g·∫Øng kick ng∆∞·ªùi d√πng: {e}", ephemeral=True)
@bot.tree.command(name='mute', description='H·∫°n ch·∫ø m·∫•y th·∫±ng x·∫°o l·ªìn')
@app_commands.describe(member='Ng∆∞·ªùi b·ªã mute', duration='Th·ªùi gian mute')
async def mute(interaction: discord.Interaction, member: discord.Member, duration: int):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return
    if interaction.user.guild_permissions.administrator:
        mute_role = discord.utils.get(interaction.guild.roles, name='Muted')
        if not mute_role:
            mute_role = await interaction.guild.create_role(name='Muted')
            for channel in interaction.guild.channels:
                await channel.set_permissions(mute_role, speak=False, send_messages=False)
        
        await member.add_roles(mute_role)
        await interaction.response.send_message(f'{member.mention} ƒë√£ b·ªã mute trong {duration} ph√∫t.')
        
        await asyncio.sleep(duration * 60)
        
        await member.remove_roles(mute_role)
        await mute_role.delete()
        
        await interaction.followup.send(f'{member.mention} ƒë√£ ƒë∆∞·ª£c g·ª° mute v√† vai tr√≤ Muted ƒë√£ b·ªã x√≥a.')
    else:
        await interaction.response.send_message('B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.', ephemeral=True)
MUSIC_CATEGORIES = {
    'speedup': './speedup',
    'remix': './remix',
    'lofi' : "./lofi",
}
@bot.tree.command(name="play", description="Ph√°t nh·∫°c theo th·ªÉ lo·∫°i")
async def play(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    if interaction.user.voice is None:
        await interaction.response.send_message("B·∫°n kh√¥ng ·ªü trong k√™nh tho·∫°i n√†o!", ephemeral=True)
        return

    channel = interaction.user.voice.channel
    voice_client = discord.utils.get(bot.voice_clients, guild=interaction.guild)

    if voice_client is None or not voice_client.is_connected():
        try:
            voice_client = await channel.connect()
        except Exception as e:
            await interaction.response.send_message(f"L·ªói k·∫øt n·ªëi: {e}", ephemeral=True)
            return

    select = discord.ui.Select(
        placeholder="Ch·ªçn th·ªÉ lo·∫°i nh·∫°c...",
        options=[
            discord.SelectOption(label="Speedup", value="speedup"),
            discord.SelectOption(label="Remix", value="remix"),
            discord.SelectOption(label="Lofi Chill", value="lofi"),
        ]
    )

    async def select_callback(interaction: discord.Interaction):
        category = select.values[0]
        audio_folder = MUSIC_CATEGORIES.get(category)

        if audio_folder is None:
            await interaction.response.send_message("Th·ªÉ lo·∫°i nh·∫°c kh√¥ng h·ª£p l·ªá!", ephemeral=True)
            return

        audio_files = [f for f in os.listdir(audio_folder) if f.endswith('.mp3')]

        if not audio_files:
            await interaction.response.send_message("Th∆∞ m·ª•c kh√¥ng ch·ª©a file √¢m thanh n√†o.", ephemeral=True)
            return

        async def play_audio_from_files():
            if voice_client is None or not voice_client.is_connected():
                print("Voice client kh√¥ng k·∫øt n·ªëi.")
                return

            while True:
                for file_name in audio_files:
                    file_path = os.path.join(audio_folder, file_name)
                    if not os.path.exists(file_path):
                        print(f"File kh√¥ng t·ªìn t·∫°i: {file_path}")
                        continue

                    source = discord.FFmpegPCMAudio(file_path, executable='ffmpeg')


                    def after_playing(error):
                        if error:
                            print(f"ƒê√£ c√≥ l·ªói x·∫£y ra khi ph√°t √¢m thanh: {error}")
                        if not voice_client.is_playing():
                            voice_client.stop()

                    if voice_client.is_playing():
                        voice_client.stop()
                    voice_client.play(source, after=after_playing)
                    while voice_client.is_playing():
                        await asyncio.sleep(1)

        bot.loop.create_task(play_audio_from_files())
        await interaction.response.send_message(f"ƒêang ph√°t nh·∫°c t·ª´ th·ªÉ lo·∫°i: {category}", ephemeral=True)

    select.callback = select_callback
    view = discord.ui.View()
    view.add_item(select)

    await interaction.response.send_message("Ch·ªçn th·ªÉ lo·∫°i nh·∫°c b·∫°n mu·ªën ph√°t:", view=view, ephemeral=True)
@bot.tree.command(name="stop", description="D·ª´ng ph√°t nh·∫°c v√† r·ªùi kh·ªèi k√™nh tho·∫°i")
async def stop(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return

    voice_client = discord.utils.get(bot.voice_clients, guild=interaction.guild)
    if voice_client is None or not voice_client.is_connected():
        await interaction.response.send_message("Bot kh√¥ng ƒëang ph√°t nh·∫°c ho·∫∑c kh√¥ng k·∫øt n·ªëi k√™nh tho·∫°i.", ephemeral=True)
        return

    voice_client.stop()
    await voice_client.disconnect()
    await interaction.response.send_message("ƒê√£ d·ª´ng ph√°t nh·∫°c v√† r·ªùi kh·ªèi k√™nh tho·∫°i.", ephemeral=True)

@bot.tree.command(name='unmute', description='G·ª° mute cho ng∆∞·ªùi d√πng')
@app_commands.describe(member='Ng∆∞·ªùi ƒë∆∞·ª£c g·ª° mute')
async def unmute(interaction: discord.Interaction, member: discord.Member):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return
    if interaction.user.guild_permissions.administrator:
        mute_role = discord.utils.get(interaction.guild.roles, name='Muted')
        if mute_role and mute_role in member.roles:
            await member.remove_roles(mute_role)
            await interaction.response.send_message(f'{member.mention} ƒë√£ ƒë∆∞·ª£c g·ª° mute.')
        else:
            await interaction.response.send_message(f'{member.mention} kh√¥ng c√≥ vai tr√≤ Muted ho·∫∑c ƒë√£ ƒë∆∞·ª£c g·ª° mute tr∆∞·ªõc ƒë√≥.')
    else:
        await interaction.response.send_message('B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.', ephemeral=True)
@bot.tree.command(name="info", description="Th√¥ng tin v·ªÅ Bot Sever.")
async def info(interaction: discord.Interaction):
    global allow_admin
    if allow_admin and interaction.user.id not in admin_list:
        return
    num_guilds = len(bot.guilds)
    num_members = sum(len(guild.members) for guild in bot.guilds)  
    num_channels = sum(len(guild.channels) for guild in bot.guilds)  
    ping = round(bot.latency * 1000) 
    num_commands = len(bot.commands)  


    embed = discord.Embed(
        title="**Bot Information**",
        description="M·ªôt v√†i th√¥ng tin Bot Sever Operation By L√™ Ng·ªçc Anh!!",
        color=discord.Color.blurple()
    )
    embed.set_author(name=bot.user.name, icon_url=bot.user.avatar.url)
    embed.set_thumbnail(url=bot.user.avatar.url)
    
    embed.add_field(name="**Bot Name**", value=f"**{bot.user.name}**", inline=True)
    embed.add_field(name="**Bot ID**", value=f"`{bot.user.id}`", inline=True)
    embed.add_field(name="**Admin Bot**", value=f"**L√™ Ng·ªçc Anh**", inline=True)
    embed.add_field(name="**Servers Joined**", value=f"**{num_guilds}**", inline=True)
    embed.add_field(name="**Members**", value=f"**{num_members}**", inline=True)
    embed.add_field(name="**Channels**", value=f"**{num_channels}**", inline=True)
    embed.add_field(name="**Ping**", value=f"**{ping} ms**", inline=True)
    embed.add_field(name="**Total Commands**", value=f"**{num_commands}**", inline=True)

    embed.add_field(name="**Support Us**", value=(
        "üî∞ **Thanh to√°n Ng√¢n h√†ng/Momo:**\n"
        "üìé 4027082007 - MB BANK\n"
        "üìé 0339992592 - MoMo\n"
        "üìé 5811808105 - BIDV\n\n"
        "üî∞ **Thanh to√°n Card:**\n\n"
        "‚ö†Ô∏è **L∆∞u √Ω:**\n"
        "C·∫£m ∆°n c√°c b·∫°n v√¨ ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• Bot b√™n ch√∫ng t√¥i! N·∫øu c√≥ sai s√≥t b·∫°n c√≥ th·ªÉ li√™n h·ªá v·ªõi Admin L√™ Ng·ªçc Anh qua:\n"
        "Facebook : https://www.facebook.com/nanh.nlmn/\n"
        "Zalo : 0339992592\n"
    ), inline=False)
    
    embed.add_field(name="**Version**", value=f"**1.0.0**", inline=True)
    embed.add_field(name="**Description**", value="I'm here to make your server a better place with useful commands and fun features!", inline=False)

    embed.set_image(url="https://i.pinimg.com/originals/be/53/fc/be53fc5350400539c44b3bc7c2552fe9.gif")  
    embed.set_footer(text="Thank you for using our bot!", icon_url=bot.user.avatar.url)

    await interaction.response.send_message(embed=embed)
import aiohttp

def transfer_money(sender_id, receiver_id, amount):
    sender_id = str(sender_id)
    receiver_id = str(receiver_id)
    
    if sender_id not in money_data or money_data[sender_id] < amount:
        return False 

    if receiver_id not in money_data:
        money_data[receiver_id] = 0

    money_data[sender_id] -= amount
    money_data[receiver_id] += amount
    save_money_data()
    return True

@bot.tree.command(name='bank', description='Chuy·ªÉn ti·ªÅn cho ng∆∞·ªùi kh√°c.')
async def bank(interaction: discord.Interaction, recipient: discord.User, amount: int):
    sender_id = interaction.user.id
    receiver_id = recipient.id

    if amount <= 0:
        await interaction.response.send_message("üí∏ **S·ªë ti·ªÅn chuy·ªÉn ph·∫£i l·ªõn h∆°n 0.**")
        return

    if get_user_money(sender_id) < amount:
        await interaction.response.send_message("‚ùå **B·∫°n kh√¥ng c√≥ ƒë·ªß ti·ªÅn ƒë·ªÉ chuy·ªÉn.**")
        return

    if not transfer_money(sender_id, receiver_id, amount):
        await interaction.response.send_message("‚ö†Ô∏è **ƒê√£ x·∫£y ra l·ªói khi chuy·ªÉn ti·ªÅn. Vui l√≤ng th·ª≠ l·∫°i.**")
        return


    embed = discord.Embed(
        title="üí∞ **Chuy·ªÉn Ti·ªÅn Th√†nh C√¥ng!**",
        description=f"**Ng∆∞·ªùi g·ª≠i:** {interaction.user.mention}\n**Ng∆∞·ªùi nh·∫≠n:** {recipient.mention}\n**S·ªë ti·ªÅn:** {amount}",
        color=discord.Color.green()
    )
    embed.set_thumbnail(url="https://i.pinimg.com/originals/f3/e0/5e/f3e05e008d8d5e0eda6c0fa8f559ab28.gif") 
    embed.set_footer(text="Ch√∫c b·∫°n giao d·ªãch vui v·∫ª!")
    
    await interaction.response.send_message(embed=embed)

class VoiceChannelSelect(Select):
    def __init__(self, channels):
        options = [discord.SelectOption(label=channel.name, value=str(channel.id)) for channel in channels]
        super().__init__(placeholder='Ch·ªçn m·ªôt k√™nh tho·∫°i...', options=options)

    async def callback(self, interaction: discord.Interaction):
        channel_id = int(self.values[0])
        channel = bot.get_channel(channel_id)
        if not channel or not isinstance(channel, discord.VoiceChannel):
            await interaction.response.send_message("Kh√¥ng t√¨m th·∫•y k√™nh tho·∫°i n√†y!")
            return

        voice_bot = await channel.connect()
        file_path = 'xa.mp3'
        source = discord.FFmpegPCMAudio(file_path, executable='ffmpeg')

        def after_playing(error):
            if error:
                print('An error occurred while playing:', error)
            voice_bot.play(source, after=after_playing)

        voice_bot.play(source, after=after_playing)
        await interaction.response.send_message("ƒêang ph√°t √¢m thanh v√¥ h·∫°n trong k√™nh tho·∫°i!")

@bot.tree.command(name="xa", description="X·∫£ mic.")
async def xa(interaction: discord.Interaction):
    voice_channels = [channel for channel in interaction.guild.voice_channels]

    if not voice_channels:
        await interaction.response.send_message("Kh√¥ng c√≥ k√™nh tho·∫°i n√†o trong server!")
        return

    select = VoiceChannelSelect(voice_channels)
    view = View()
    view.add_item(select)
    await interaction.response.send_message("Ch·ªçn k√™nh tho·∫°i ƒë·ªÉ ph√°t √¢m thanh:", view=view)

intents.voice_states = True
import yt_dlp
import imageio_ffmpeg as ffmpeg


bot_start_time = None


def update_bot_start_time():
    global bot_start_time
    bot_start_time = datetime.now()


gif_link = ["https://i.pinimg.com/originals/02/83/bb/0283bbc5a5abffd81997a357d076f043.gif",
            "https://i.pinimg.com/originals/b9/1b/80/b91b804c5760a415a883369cd128c6ad.gif",
            "https://i.pinimg.com/originals/3e/ef/1d/3eef1de6ece00c4c46d33f19eb9db00c.gif",
            "https://i.pinimg.com/originals/f1/cb/af/f1cbaf64745c20caf69135114651f2b4.gif",
            "https://i.pinimg.com/originals/d0/45/11/d04511e2c4522a8148ea1b71b42ac795.gif",
            "https://i.pinimg.com/originals/03/50/34/035034a8d71bfa7202944cd397f9c20b.gif",
            "https://i.pinimg.com/originals/4f/e7/2e/4fe72ed1d58e6edffa4d3ed733bee7ff.gif",
            "https://i.pinimg.com/originals/40/ad/d0/40add08405dd875431b858f2a0419224.gif",
            "https://i.pinimg.com/originals/f1/2b/21/f12b218969982a3a699fc6004120d8b3.gif",

]
gif_index = 0
@bot.tree.command(name="menu", description="Xem menu c·ªßa bot")
async def menu(interaction: discord.Interaction):
    global gif_index  
    if allow_admin and interaction.user.id not in admin_list:
        return

    try:
        bot_user = bot.user
        bot_name = bot_user.name
        bot_id = bot_user.id
        PREFIX = "/"  

        if bot_start_time:
            uptime_delta = datetime.now() - bot_start_time
            days = uptime_delta.days
            hours = uptime_delta.seconds // 3600
            minutes = (uptime_delta.seconds // 60) % 60

            uptime_str = f"{days} ng√†y, {hours} gi·ªù, {minutes} ph√∫t" if days > 0 else f"{hours} gi·ªù, {minutes} ph√∫t"
        else:
            uptime_str = "Bot ch∆∞a ƒë∆∞·ª£c b·∫≠t"

        help_message = f"""
üéê **ùêãùê¢ùê¨ùê≠ ùêÇùê®ùê¶ùê¶ùêöùêßùêù ùêÅùê®ùê≠** üéê
D∆∞·ªõi ƒë√¢y l√† danh s√°ch c√°c l·ªánh c√≥ s·∫µn c·ªßa bot:

üå∏ **L·ªánh Nh√¢y ùêÉùê¢ùê¨ùêúùê®ùê´ùêù** üå∏
üè∑Ô∏è **{PREFIX}n [id_user]**: Nh√¢y tag t√™n.
üìå **{PREFIX}c**: Nh√¢y.
üì∏ **{PREFIX}fsm [UID_User] [link_·∫£nh]**: Face Shaming

‚öôÔ∏è **L·ªánh H·ªá Th·ªëng cho ùêÉùê¢ùê¨ùêúùê®ùê´ùêù** ‚öôÔ∏è
‚èπÔ∏è **{PREFIX}st + l·ªánh + [UID - N·∫øu c√≥]**: Stop l·ªánh
üö™ **{PREFIX}vc [id_k√™nh]**: Treo room 
üç≠ **{PREFIX}id [@Tag]**: L·∫•y ID User
üçÑ **{PREFIX}help**: H∆∞·ªõng d·∫´n ch∆°i game 
üêá **{PREFIX}stop**: D·ª´ng ph√°t nh·∫°c
ü§° **{PREFIX}kick [user]**: Kick ng∆∞·ªùi d√πng
üç™ **{PREFIX}unmute [user]** : G·ª° mute 
üåä **{PREFIX}mute [user] [time] : Mute
üí¨ **{PREFIX}info** : Th√¥ng tin v·ªÅ Bot
üß© **{PREFIX}play [typemusic]** : Nghe nh·∫°c
üìÅ **{PREFIX}bank [user] [money]: Chuy·ªÉn ti·ªÅn

üé≤üé≤ **L·ªánh Gi·∫£i Tr√≠ ùêÉùê¢ùê¨ùêúùê®ùê´ùêù** üé≤üé≤
üëª **{PREFIX}chat [N·ªôi dung]**: Spam n·ªôi dung
üíã **{PREFIX}kiss [@Tag]**: H√¥n
üçÜ **{PREFIX}chich [id_user]**: G·∫° ƒë·ªãt !!
üéÄ **{PREFIX}vu**: ·∫¢nh v√∫
üí§ **{PREFIX}anime**: Video Anime
üëª **{PREFIX}girl**: ·∫¢nh g√°i
üì¢ **{PREFIX}chanle [L·∫ª/Ch·∫µn] [ti·ªÅn c∆∞·ª£c]**: Game ƒë·ªë vui
üî¥**{PREFIX}xa [id channel]**: X·∫£ mic

üîß **L·ªánh Admin ùêÉùê¢ùê¨ùêúùê®ùê´ùêù** üîß
üÜï **{PREFIX}addadmin [User]**: Th√™m ng∆∞·ªùi d√πng v√†o danh s√°ch Admin.
‚úîÔ∏è **{PREFIX}allowadmin [True Or False]**: B·∫≠t t·∫Øt L·ªánh Admin.
‚ùå **{PREFIX}removeadmin [User]**: X√≥a quy·ªÅn admin c·ªßa ng∆∞·ªùi d√πng.
üìã **{PREFIX}listadmins**: Xem danh s√°ch c√°c admin hi·ªán t·∫°i.

üé® **ùòäùò∞ùò±ùò∫ùòôùò™ùò®ùò©ùòÅ ùòàùò•ùòÆùò™ùòØ ùòâùò∞ùòÅ ùòìùò¶ ùòïùò®ùò∞ùò§ ùòàùòØùò© ùò§ùòµùò¶ùò¥1ùòÆùòπùò©** üé®
üîë **ùòºùôòùôòùô§ùô™ùô£ùô©ùô®**: {bot_name}
üÜî **ID**: {bot_id}
‚è≤Ô∏è **Th·ªùi gian ho·∫°t ƒë·ªông**: {uptime_str}
"""
        gif_url = gif_link[gif_index]  
        embed = discord.Embed(
            description=help_message,
            color=discord.Color.purple()
        )
        embed.set_image(url=gif_url)  


        await interaction.response.send_message(embed=embed)

        gif_index = (gif_index + 1) % len(gif_link)

    except Exception as e:
        print(f'L·ªói khi x·ª≠ l√Ω l·ªánh menu: {e}')
        await interaction.response.send_message("ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω l·ªánh menu.", ephemeral=True)
@bot.event
async def on_ready():
    print(f"{bot.user.name} Updating Bot Sever - Running By Nanh.")
    update_bot_start_time()
    try:
        synced = await bot.tree.sync()
        print(f"Synced {len(synced)} commands.")
    except Exception as e:
        print(e)

bot.run(TOKEN) 
